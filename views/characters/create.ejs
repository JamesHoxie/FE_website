<!DOCTYPE html>
<html lang="en">
  <%- include('../partials/charactershead.ejs') %>
  
<body>
  <%- include('../partials/usergreeting.ejs') %>
  <div class="body-container">
    <div class="header-container">
      <h1 id="page-title">Fire Emblem Character Profiles</h1>
      <%- include('../partials/nav.ejs') %>
    </div>

    <!--BEGIN parchment-container-->
    <div class="parchment-container">
      <!--BEGIN main-content container-->
      <div class="main-content-container">
        <div class="create-character-profile content">
          <h2>Character Profile Creation Page</h2>
          <form action="/characters/create" enctype="multipart/form-data" method="POST">
              <input type="hidden" id="portrait-url" name="portrait-url" value="Fire_Emblem_Logo.png">
              <label for="name">Character Name</label>
              <input type="text" id="name" name="name" required>
              <label for="quote">Character Quote</label>
              <input type="text" id="quote" name="quote">
              <label for="bio">Character Bio</label>
              <textarea id="bio" name="bio"></textarea>
              <label for="portrait">Character Portrait:</label>
              <input type="file" id="portrait" name="portrait" accept="image/*">
              <button>Submit</button>
          </form>
        </div>            
      </div>
      <!--END MAIN-CONTENT CONTAINER-->
    </div>
    <!--END PARCHMENT CONTAINER-->
    <%- include('../partials/footer.ejs') %>
  </div>
  <script>

    // generate random id for uploaded image file name
    function generateName(fileName) {
      fileExtension = fileName.split('.');
      fileExtension = fileExtension[fileExtension.length - 1];
      fileName = fileName + new Date().toString();
      let hash = 0;
      let chr = '';

      for (let i = 0; i < fileName.length; i++) {
        chr   = fileName.charCodeAt(i);
        hash  = ((hash << 5) - hash) + chr;
        hash |= 0; // Convert to 32bit integer
      }

      return hash + '.' + fileExtension;
    }


    /*
      Function to carry out the actual PUT request to S3 using the signed request from the app.
    */
    function uploadFile(file, signedRequest, url){
      const xhr = new XMLHttpRequest();
      xhr.open('PUT', signedRequest);
      xhr.onreadystatechange = () => {
        if(xhr.readyState === 4){
          if(xhr.status === 200){
            // document.getElementById('preview').src = url;
            document.getElementById('portrait-url').value = url;
            alert('success?');
          }
          else{
            alert('Could not upload file.');
          }
        }
      };
      xhr.send(file);
    }

    /*
      Function to get the temporary signed request from the app.
      If request successful, continue to upload the file using this signed
      request.
    */
    function getSignedRequest(file){
      const xhr = new XMLHttpRequest();
      xhr.open('GET', `/sign-s3?file-name=${file.name}&file-type=${file.type}`);
      xhr.onreadystatechange = () => {
        if(xhr.readyState === 4){
          if(xhr.status === 200){
            const response = JSON.parse(xhr.responseText);
            uploadFile(file, response.signedRequest, response.url);
          }
          else{
            alert('Could not get signed URL.');
          }
        }
      };
      xhr.send();
    }

    /*
     Function called when file input updated. If there is a file selected, then
     start upload procedure by asking for a signed request from the app.
    */
    function initUpload(){
      const files = document.getElementById('portrait').files;
      const file = files[0];
      if(file == null) return;
      // change file name
      const newFile = new File([file], generateName(file.name));
      getSignedRequest(newFile);
    }

    /*
     Bind listeners when the page loads.
    */
    (() => {
        document.getElementById('portrait').onchange = initUpload;
    })();

  </script>
</body>
</html>